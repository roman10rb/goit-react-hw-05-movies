{"version":3,"file":"static/js/881.742e5fe1.chunk.js","mappings":"0LACA,EAAuB,wBAAvB,EAA2D,6BAA3D,EAAgG,yB,SCsBhG,EAlBmB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACtBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGL,EAAOM,KAAI,YAA2B,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,yBACE,SAAC,KAAD,CAAML,UAAWC,EAAUK,GAAE,UAAKT,GAAL,OAAYQ,GAAME,MAAO,CAAEC,KAAMV,GAA9D,UACE,eAAIE,UAAWC,EAAf,SAA4BE,GAAQC,OAF/BC,EAMZ,KAGN,C,6ICpBD,EAAuB,qBAAvB,EAAoD,sBAApD,EAAmF,uB,SCQpE,SAASI,IAAU,IAAD,EAE/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAAsCD,EAAAA,EAAAA,UAAS,IAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,oGAGhBP,EAAeI,GAHC,UAIGI,EAAAA,EAAAA,IAAiBJ,GAJpB,OAIVK,EAJU,OAKhBX,EAAUW,EAAKC,SALC,gDAOhBC,QAAQC,IAAR,MAPgB,qGAAH,qDAYjBL,GAbC,CAcF,GAAE,CAACH,IAQJ,OACE,6BACE,0BACE,kBAAMjB,UAAWC,EAAUyB,SATZ,SAAAC,GACnBA,EAAMC,iBACNZ,EAAgB,CAAEa,MAAOjB,IACzBe,EAAMG,OAAOC,OACd,EAKK,WAEE,kBAAO/B,UAAWC,EAChB+B,KAAK,OAELC,YAAY,gBACZ9B,KAAK,YACL+B,SAAU,SAAAC,GAAC,OAAItB,EAAesB,EAAEL,OAAOM,MAA5B,KAEb,mBAAQpC,UAAWC,EAAY+B,KAAK,SAApC,0BAGH,SAAC,IAAD,CAAWpC,OAAQA,EAAQC,KAAM,OAGvC,C,+LCzDDwC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAIJ,IAAMC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qBAAgC,CACrDG,OAAQ,CACNC,KAAM,KAHqB,uBACvBnB,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBD,EAAgB,mCAAG,WAAMQ,GAAN,yFACPQ,EAAAA,EAAAA,IAAA,eAA0B,CAC/CG,OAAQ,CACNX,MAAOA,EACPY,KAAM,KAJoB,uBACtBnB,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,sDAUhBoB,EAAY,mCAAG,WAAMrC,GAAN,yFACHgC,EAAAA,EAAAA,IAAA,gBAAmBhC,IADhB,uBAClBiB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZqB,EAAY,mCAAG,WAAMtC,GAAN,yFACHgC,EAAAA,EAAAA,IAAA,gBAAmBhC,EAAnB,aADG,uBAClBiB,EADkB,EAClBA,KADkB,kBAEnBA,EAAKsB,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMxC,GAAN,yFACNgC,EAAAA,EAAAA,IAAA,gBAAmBhC,EAAnB,aADM,uBACrBiB,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","servise/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"MovieList_Item__EriSG\",\"Container\":\"MovieList_Container__W+St4\",\"Title\":\"MovieList_Title__T5U9i\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\n\n const MovieList = ({ movies, link }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.Container}>\n      {movies.map(({  name, title, id }) => {\n        return (\n          <li key={id}>\n            <Link className={css.Item} to={`${link}${id}`} state={{ from: location }}>\n              <h1 className={css.Title} >{name || title}</h1>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  link: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"Movies_Form__rKqDz\",\"Input\":\"Movies_Input__ylMgS\",\"Button\":\"Movies_Button__0LdR0\"};","import MovieList from 'components/MovieList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieBySearch } from 'servise/movies-api';\nimport css from \"./Movies.module.css\"\n\n\n\n\nexport default function Movies() {\n  \n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const fetchMovies = async () => {\n     \n      try {\n        setSearchQuery(movieName);\n        const data = await getMovieBySearch(movieName);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n      \n      }\n    };\n    fetchMovies();\n  }, [movieName]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchQuery });\n    event.target.reset();\n  };\n\n  return (\n    <main >\n      <div>\n        <form className={css.Form} onSubmit={handleSubmit}>\n          \n          <input className={css.Input}\n            type=\"text\"\n          \n            placeholder=\"Search movies\"\n            name=\"movieName\"\n            onChange={e => setSearchQuery(e.target.value)}\n          />\n          <button className={css.Button} type=\"submit\">Search</button>\n        </form>\n      </div>\n       <MovieList movies={movies} link={''} />\n    </main>\n  );\n}","\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '9ae8fd93ae6d092b9ce69048ddd475c5',\n};\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      query: query,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data.results;\n};"],"names":["movies","link","location","useLocation","className","css","map","name","title","id","to","state","from","Movies","useState","setMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchMovies","getMovieBySearch","data","results","console","log","onSubmit","event","preventDefault","query","target","reset","type","placeholder","onChange","e","value","axios","api_key","getTrendingMovies","params","page","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}